package ca.ulaval.glo2004.gui;

import ca.ulaval.glo2004.domaine.Controleur;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JColorChooser;
import javax.swing.JDialog;
import javax.swing.JTabbedPane;
import javax.swing.*;
import java.lang.NumberFormatException;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


public class FenetrePrincipale extends javax.swing.JFrame {

    /**
     * Creates new form FenetrePrincipale
     */
    public FenetrePrincipale() {
        initComponents();
        Controleur = new Controleur(panneauAfficheur.getGraphics());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneauPrincipal = new javax.swing.JPanel();
        panneauSelectionVue = new javax.swing.JPanel();
        selecteurVue = new javax.swing.JComboBox<>();
        barreChalCLT = new javax.swing.JPanel();
        annulerBouton = new javax.swing.JButton();
        retablirBouton = new javax.swing.JButton();
        activeFileName = new javax.swing.JLabel();
        ChalCLTNom = new javax.swing.JPanel();
        Nom = new javax.swing.JLabel();
        fichierOptions = new javax.swing.JToolBar();
        sauvegarderFichierBouton = new javax.swing.JButton();
        ouvrirFichierBouton = new javax.swing.JButton();
        exporterComboBox = new javax.swing.JComboBox<>();
        boutonVueDessus = new javax.swing.JButton();
        boutonVueDroite = new javax.swing.JButton();
        boutonVueGauche = new javax.swing.JButton();
        boutonVueAvant = new javax.swing.JButton();
        boutonVueArriere = new javax.swing.JButton();
        NouveauChalet = new javax.swing.JButton();
        panneauChaletProprietes = new javax.swing.JPanel();
        selectPropTab = new javax.swing.JTabbedPane();
        tabPropMurs = new javax.swing.JPanel();
        murAvantProp = new javax.swing.JPanel();
        longueurAvantLabel = new javax.swing.JLabel();
        longueurAvantFtInput = new javax.swing.JTextField();
        longueurAvantFtLabel = new javax.swing.JLabel();
        longueurAvantInInput = new javax.swing.JTextField();
        longueurAvantInNumInput = new javax.swing.JTextField();
        longueurAvantDivision = new javax.swing.JLabel();
        longueurAvantInInputDen = new javax.swing.JTextField();
        longueurAvantInLabel = new javax.swing.JLabel();
        appliquerChangementLongueur = new javax.swing.JButton();
        longueurDroiteLabel = new javax.swing.JLabel();
        longueurDroiteFtInput = new javax.swing.JTextField();
        longueurDroiteFtLabel = new javax.swing.JLabel();
        longueurDroiteInInput = new javax.swing.JTextField();
        longueurDroiteInNumInput = new javax.swing.JTextField();
        longueurDroiteDivision = new javax.swing.JLabel();
        longueurDroiteInInputDen = new javax.swing.JTextField();
        longueurDroiteInLabel = new javax.swing.JLabel();
        murDroiteProp = new javax.swing.JPanel();
        couleurDroiteLabel = new javax.swing.JLabel();
        couleurDroiteSelect = new javax.swing.JButton();
        couleurAvantSelect = new javax.swing.JButton();
        couleurDroiteLabel1 = new javax.swing.JLabel();
        couleurGaucheSelect = new javax.swing.JButton();
        couleurGaucheLabel = new javax.swing.JLabel();
        couleurDerriereSelect = new javax.swing.JButton();
        couleurDerriereLabel = new javax.swing.JLabel();
        murGaucheProp = new javax.swing.JPanel();
        rainureGaucheLabel = new javax.swing.JLabel();
        supplementaireIn = new javax.swing.JTextField();
        epaisseurDroiteLabel = new javax.swing.JLabel();
        epaisseurInput = new javax.swing.JTextField();
        epaisseurDroiteCoucheLabel = new javax.swing.JLabel();
        appliquerChangementEpaisseur = new javax.swing.JButton();
        appliquerChangementRainure = new javax.swing.JButton();
        epaisseurNum = new javax.swing.JTextField();
        longueurAvantDivision5 = new javax.swing.JLabel();
        epaisseurDen = new javax.swing.JTextField();
        supplementaireDen = new javax.swing.JTextField();
        supplementaireNum = new javax.swing.JTextField();
        longueurAvantDivision6 = new javax.swing.JLabel();
        epaisseurDroiteCoucheLabel1 = new javax.swing.JLabel();
        hauteurLabel = new javax.swing.JLabel();
        ftInputHauteur = new javax.swing.JTextField();
        ftHauteur = new javax.swing.JLabel();
        divisionInHauteur = new javax.swing.JLabel();
        inNumInputHauteur = new javax.swing.JTextField();
        inDenInputHauteur = new javax.swing.JTextField();
        inHauteur = new javax.swing.JLabel();
        inInputHauteur = new javax.swing.JTextField();
        facadeLabel = new javax.swing.JLabel();
        droiteLabel = new javax.swing.JLabel();
        gaucheLabel = new javax.swing.JLabel();
        appliquerHauteur = new javax.swing.JButton();
        tabPropToit = new javax.swing.JPanel();
        panelToit = new javax.swing.JPanel();
        angleToitLable = new javax.swing.JLabel();
        angleToitInput = new javax.swing.JTextField();
        couleurToitLabel = new javax.swing.JLabel();
        couleurToitInput = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        labelToit = new javax.swing.JLabel();
        tabPropAutres = new javax.swing.JPanel();
        porteBouton = new javax.swing.JButton();
        fenetreBouton = new javax.swing.JButton();
        selecteurMurAutres = new javax.swing.JTabbedPane();
        selectFacadeAutres = new javax.swing.JScrollPane();
        facadeConteneur = new javax.swing.JPanel();
        selectDroiteAutres = new javax.swing.JScrollPane();
        droiteConteneur = new javax.swing.JPanel();
        selectGaucheAutres = new javax.swing.JScrollPane();
        gaucheConteneur = new javax.swing.JPanel();
        selectArriereAutres = new javax.swing.JScrollPane();
        arriereConteneur = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        PositionX = new javax.swing.JLabel();
        positionXPiEntree = new javax.swing.JTextField();
        positionXFtLabel = new javax.swing.JLabel();
        positionXPoEntree = new javax.swing.JTextField();
        positionXPoNum = new javax.swing.JTextField();
        longueurAvantDivision1 = new javax.swing.JLabel();
        positionXPoDen = new javax.swing.JTextField();
        longueurAvantInLabel1 = new javax.swing.JLabel();
        longueurAvantLabel1 = new javax.swing.JLabel();
        hauteurPiEntree = new javax.swing.JTextField();
        longueurAvantFtLabel1 = new javax.swing.JLabel();
        hauteurPoEntree = new javax.swing.JTextField();
        hauteurPoNum = new javax.swing.JTextField();
        longueurAvantDivision2 = new javax.swing.JLabel();
        hauteurPoDen = new javax.swing.JTextField();
        longueurAvantInLabel2 = new javax.swing.JLabel();
        longueurAvantLabel2 = new javax.swing.JLabel();
        largeurPiEntree = new javax.swing.JTextField();
        longueurAvantFtLabel2 = new javax.swing.JLabel();
        largeurPoEntree = new javax.swing.JTextField();
        largeurPoNum = new javax.swing.JTextField();
        longueurAvantDivision3 = new javax.swing.JLabel();
        largeurPoDen = new javax.swing.JTextField();
        longueurAvantInLabel3 = new javax.swing.JLabel();
        PositionX2 = new javax.swing.JLabel();
        positionYPiEntree = new javax.swing.JTextField();
        positionXFtLabel2 = new javax.swing.JLabel();
        positionYPoEntree = new javax.swing.JTextField();
        positionYPoNum = new javax.swing.JTextField();
        longueurAvantDivision4 = new javax.swing.JLabel();
        positionYPoDen = new javax.swing.JTextField();
        longueurAvantInLabel4 = new javax.swing.JLabel();
        indicateurReussiteCreation = new javax.swing.JLabel();
        panneauAfficheur = new javax.swing.JPanel();
        checkbox1 = new java.awt.Checkbox();
        epaisseurDroiteLabel1 = new javax.swing.JLabel();
        grille_input = new javax.swing.JTextField();
        epaisseurDroiteLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ChalCLT");
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 1920, 1080));
        setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 0));
        setSize(new java.awt.Dimension(200, 200));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        panneauPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        panneauPrincipal.setPreferredSize(new java.awt.Dimension(1920, 1080));

        panneauSelectionVue.setBackground(new java.awt.Color(51, 51, 51));

        selecteurVue.setBackground(new java.awt.Color(102, 102, 102));
        selecteurVue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vue de dessus", "Vue de l'avant", "Vue de droite", "Vue de gauche", "Vue de derrière" }));
        selecteurVue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecteurVueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panneauSelectionVueLayout = new javax.swing.GroupLayout(panneauSelectionVue);
        panneauSelectionVue.setLayout(panneauSelectionVueLayout);
        panneauSelectionVueLayout.setHorizontalGroup(
            panneauSelectionVueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauSelectionVueLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(selecteurVue, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panneauSelectionVueLayout.setVerticalGroup(
            panneauSelectionVueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauSelectionVueLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(selecteurVue, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        barreChalCLT.setBackground(new java.awt.Color(51, 51, 51));
        barreChalCLT.setForeground(new java.awt.Color(51, 51, 51));
        barreChalCLT.setPreferredSize(new java.awt.Dimension(1920, 80));

        annulerBouton.setBackground(new java.awt.Color(40, 40, 40));
        annulerBouton.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        annulerBouton.setForeground(new java.awt.Color(204, 204, 204));
        annulerBouton.setText("←");
        annulerBouton.setBorder(null);
        annulerBouton.setFocusable(false);
        annulerBouton.setPreferredSize(new java.awt.Dimension(75, 75));
        annulerBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerBoutonActionPerformed(evt);
            }
        });

        retablirBouton.setBackground(new java.awt.Color(40, 40, 40));
        retablirBouton.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        retablirBouton.setForeground(new java.awt.Color(204, 204, 204));
        retablirBouton.setText("→");
        retablirBouton.setBorder(null);
        retablirBouton.setFocusable(false);
        retablirBouton.setPreferredSize(new java.awt.Dimension(75, 75));
        retablirBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retablirBoutonActionPerformed(evt);
            }
        });

        activeFileName.setBackground(new java.awt.Color(51, 51, 51));
        activeFileName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        activeFileName.setForeground(new java.awt.Color(255, 255, 255));
        activeFileName.setText("Nom du projet ouvert");

        ChalCLTNom.setBackground(new java.awt.Color(41, 41, 41));
        ChalCLTNom.setName("ChalCLT_PWR"); // NOI18N

        Nom.setBackground(new java.awt.Color(41, 41, 41));
        Nom.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        Nom.setForeground(new java.awt.Color(255, 255, 255));
        Nom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Nom.setText("ChalCLT");
        Nom.setOpaque(true);

        javax.swing.GroupLayout ChalCLTNomLayout = new javax.swing.GroupLayout(ChalCLTNom);
        ChalCLTNom.setLayout(ChalCLTNomLayout);
        ChalCLTNomLayout.setHorizontalGroup(
            ChalCLTNomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Nom, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
        );
        ChalCLTNomLayout.setVerticalGroup(
            ChalCLTNomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Nom, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        );

        fichierOptions.setFloatable(false);
        fichierOptions.setBackground(new java.awt.Color(51, 51, 51));
        fichierOptions.setBorder(null);
        fichierOptions.setBorderPainted(false);
        fichierOptions.setFocusable(false);

        sauvegarderFichierBouton.setBackground(new java.awt.Color(204, 204, 204));
        sauvegarderFichierBouton.setText("Sauvegarder");
        sauvegarderFichierBouton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        sauvegarderFichierBouton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sauvegarderFichierBouton.setFocusable(false);
        sauvegarderFichierBouton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sauvegarderFichierBouton.setMaximumSize(new java.awt.Dimension(120, 60));
        sauvegarderFichierBouton.setPreferredSize(new java.awt.Dimension(90, 60));
        sauvegarderFichierBouton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sauvegarderFichierBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauvegarderFichierBoutonActionPerformed(evt);
            }
        });
        fichierOptions.add(sauvegarderFichierBouton);

        ouvrirFichierBouton.setBackground(new java.awt.Color(204, 204, 204));
        ouvrirFichierBouton.setText("Ouvrir");
        ouvrirFichierBouton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ouvrirFichierBouton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ouvrirFichierBouton.setFocusable(false);
        ouvrirFichierBouton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ouvrirFichierBouton.setMaximumSize(new java.awt.Dimension(120, 60));
        ouvrirFichierBouton.setPreferredSize(new java.awt.Dimension(90, 60));
        ouvrirFichierBouton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ouvrirFichierBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirFichierBoutonActionPerformed(evt);
            }
        });
        fichierOptions.add(ouvrirFichierBouton);

        exporterComboBox.setBackground(new java.awt.Color(204, 204, 204));
        exporterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Exporter Tout", "Exporter Bruts", "Exporter Finis", "Exporter Retraits" }));
        exporterComboBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exporterComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exporterComboBox.setMaximumSize(new java.awt.Dimension(120, 60));
        exporterComboBox.setMinimumSize(new java.awt.Dimension(80, 68));
        exporterComboBox.setOpaque(true);
        exporterComboBox.setPreferredSize(new java.awt.Dimension(120, 60));
        exporterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exporterComboBoxActionPerformed(evt);
            }
        });
        fichierOptions.add(exporterComboBox);
        exporterComboBox.getAccessibleContext().setAccessibleName("Exporter");
        exporterComboBox.getAccessibleContext().setAccessibleParent(panneauPrincipal);

        boutonVueDessus.setText("Vue de dessus");
        boutonVueDessus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonVueDessus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVueDessusActionPerformed(evt);
            }
        });

        boutonVueDroite.setText("Vue de droite");
        boutonVueDroite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonVueDroite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVueDroiteActionPerformed(evt);
            }
        });

        boutonVueGauche.setText("Vue de Gauche");
        boutonVueGauche.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonVueGauche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVueGaucheActionPerformed(evt);
            }
        });

        boutonVueAvant.setText("Vue de Façade");
        boutonVueAvant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonVueAvant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVueAvantActionPerformed(evt);
            }
        });

        boutonVueArriere.setText("Vue de l'arriere");
        boutonVueArriere.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonVueArriere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonVueArriereActionPerformed(evt);
            }
        });

        NouveauChalet.setText("Nouveau Chalet");
        NouveauChalet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NouveauChalet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NouveauChalet.setFocusable(false);
        NouveauChalet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NouveauChaletActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout barreChalCLTLayout = new javax.swing.GroupLayout(barreChalCLT);
        barreChalCLT.setLayout(barreChalCLTLayout);
        barreChalCLTLayout.setHorizontalGroup(
            barreChalCLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barreChalCLTLayout.createSequentialGroup()
                .addComponent(ChalCLTNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(activeFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(fichierOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boutonVueDessus, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boutonVueAvant, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boutonVueDroite, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boutonVueGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boutonVueArriere, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(NouveauChalet, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(annulerBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(retablirBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        barreChalCLTLayout.setVerticalGroup(
            barreChalCLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barreChalCLTLayout.createSequentialGroup()
                .addGroup(barreChalCLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChalCLTNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activeFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fichierOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(barreChalCLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(annulerBouton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(retablirBouton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(barreChalCLTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(barreChalCLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boutonVueDessus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonVueAvant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonVueDroite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonVueGauche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonVueArriere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NouveauChalet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        ChalCLTNom.getAccessibleContext().setAccessibleName("PWR_ChalCLT");
        ChalCLTNom.getAccessibleContext().setAccessibleDescription("");

        panneauChaletProprietes.setBackground(new java.awt.Color(51, 51, 51));

        selectPropTab.setBackground(new java.awt.Color(51, 51, 51));
        selectPropTab.setForeground(new java.awt.Color(102, 102, 102));
        selectPropTab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        tabPropMurs.setBackground(new java.awt.Color(51, 51, 51));

        murAvantProp.setBackground(new java.awt.Color(102, 102, 102));
        murAvantProp.setPreferredSize(new java.awt.Dimension(0, 180));

        longueurAvantLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantLabel.setText("Avant/Arriere : ");

        longueurAvantFtInput.setText("10");
        longueurAvantFtInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longueurAvantFtInputActionPerformed(evt);
            }
        });

        longueurAvantFtLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantFtLabel.setText("ft");

        longueurAvantInInput.setText("0");
        longueurAvantInInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longueurAvantInInputActionPerformed(evt);
            }
        });

        longueurAvantInNumInput.setText("0");

        longueurAvantDivision.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision.setText("/");

        longueurAvantInInputDen.setText("1");

        longueurAvantInLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantInLabel.setText("in");

        appliquerChangementLongueur.setText("Appliquer");
        appliquerChangementLongueur.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appliquerChangementLongueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appliquerChangementLongueurActionPerformed(evt);
            }
        });

        longueurDroiteLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurDroiteLabel.setText("Gauche/Droite :");

        longueurDroiteFtInput.setText("10");

        longueurDroiteFtLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurDroiteFtLabel.setText("ft");

        longueurDroiteInInput.setText("0");

        longueurDroiteInNumInput.setText("0");

        longueurDroiteDivision.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurDroiteDivision.setForeground(new java.awt.Color(255, 255, 255));
        longueurDroiteDivision.setText("/");

        longueurDroiteInInputDen.setText("1");

        longueurDroiteInLabel.setForeground(new java.awt.Color(255, 255, 255));
        longueurDroiteInLabel.setText("in");

        javax.swing.GroupLayout murAvantPropLayout = new javax.swing.GroupLayout(murAvantProp);
        murAvantProp.setLayout(murAvantPropLayout);
        murAvantPropLayout.setHorizontalGroup(
            murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murAvantPropLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longueurAvantLabel)
                    .addComponent(longueurDroiteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addComponent(longueurDroiteFtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteFtLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteInInput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteInNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteDivision)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteInInputDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurDroiteInLabel))
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addComponent(longueurAvantFtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantFtLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantInInput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantInNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appliquerChangementLongueur)
                            .addGroup(murAvantPropLayout.createSequentialGroup()
                                .addComponent(longueurAvantDivision)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantInInputDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantInLabel)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        murAvantPropLayout.setVerticalGroup(
            murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murAvantPropLayout.createSequentialGroup()
                .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(longueurAvantLabel)
                            .addComponent(longueurAvantFtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurAvantFtLabel)
                            .addComponent(longueurAvantInInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurAvantInNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(longueurAvantInInputDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurAvantInLabel)))
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(longueurAvantDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(longueurDroiteLabel)
                                .addComponent(longueurDroiteFtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurDroiteFtLabel))
                            .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(longueurDroiteInInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurDroiteInNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(murAvantPropLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(murAvantPropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(longueurDroiteDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurDroiteInInputDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurDroiteInLabel))))
                .addGap(18, 18, 18)
                .addComponent(appliquerChangementLongueur)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        murDroiteProp.setBackground(new java.awt.Color(102, 102, 102));
        murDroiteProp.setPreferredSize(new java.awt.Dimension(0, 180));

        couleurDroiteLabel.setForeground(new java.awt.Color(255, 255, 255));
        couleurDroiteLabel.setText("Droite : ");

        couleurDroiteSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        couleurDroiteSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                couleurDroiteSelectMouseClicked(evt);
            }
        });

        couleurAvantSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        couleurAvantSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                couleurAvantSelectMouseClicked(evt);
            }
        });

        couleurDroiteLabel1.setForeground(new java.awt.Color(255, 255, 255));
        couleurDroiteLabel1.setText("Avant : ");

        couleurGaucheSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        couleurGaucheSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                couleurGaucheSelectMouseClicked(evt);
            }
        });

        couleurGaucheLabel.setForeground(new java.awt.Color(255, 255, 255));
        couleurGaucheLabel.setText("Gauche : ");

        couleurDerriereSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        couleurDerriereSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                couleurDerriereSelectMouseClicked(evt);
            }
        });

        couleurDerriereLabel.setForeground(new java.awt.Color(255, 255, 255));
        couleurDerriereLabel.setText("Arriere:");

        javax.swing.GroupLayout murDroitePropLayout = new javax.swing.GroupLayout(murDroiteProp);
        murDroiteProp.setLayout(murDroitePropLayout);
        murDroitePropLayout.setHorizontalGroup(
            murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murDroitePropLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murDroitePropLayout.createSequentialGroup()
                        .addComponent(couleurDroiteLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(couleurAvantSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(murDroitePropLayout.createSequentialGroup()
                        .addComponent(couleurGaucheLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(couleurGaucheSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91)
                .addGroup(murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murDroitePropLayout.createSequentialGroup()
                        .addComponent(couleurDerriereLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(couleurDerriereSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(murDroitePropLayout.createSequentialGroup()
                        .addComponent(couleurDroiteLabel)
                        .addGap(10, 10, 10)
                        .addComponent(couleurDroiteSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        murDroitePropLayout.setVerticalGroup(
            murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murDroitePropLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(couleurDroiteLabel1)
                    .addComponent(couleurAvantSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(couleurDerriereLabel)
                    .addComponent(couleurDerriereSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(murDroitePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(couleurGaucheLabel)
                    .addComponent(couleurGaucheSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(couleurDroiteLabel)
                    .addComponent(couleurDroiteSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        murGaucheProp.setBackground(new java.awt.Color(102, 102, 102));
        murGaucheProp.setPreferredSize(new java.awt.Dimension(0, 180));

        rainureGaucheLabel.setForeground(new java.awt.Color(255, 255, 255));
        rainureGaucheLabel.setText("Rainure suppplémentaire : ");

        supplementaireIn.setText("0");
        supplementaireIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplementaireInActionPerformed(evt);
            }
        });

        epaisseurDroiteLabel.setForeground(new java.awt.Color(255, 255, 255));
        epaisseurDroiteLabel.setText("Épaisseur :");

        epaisseurInput.setText("3");

        epaisseurDroiteCoucheLabel.setForeground(new java.awt.Color(255, 255, 255));
        epaisseurDroiteCoucheLabel.setText("in");

        appliquerChangementEpaisseur.setText("Appliquer");
        appliquerChangementEpaisseur.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appliquerChangementEpaisseur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appliquerChangementEpaisseurActionPerformed(evt);
            }
        });

        appliquerChangementRainure.setText("Appliquer");
        appliquerChangementRainure.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appliquerChangementRainure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appliquerChangementRainureActionPerformed(evt);
            }
        });

        epaisseurNum.setText("0");

        longueurAvantDivision5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision5.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision5.setText("/");

        epaisseurDen.setText("1");

        supplementaireDen.setText("1");

        supplementaireNum.setText("0");

        longueurAvantDivision6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision6.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision6.setText("/");

        epaisseurDroiteCoucheLabel1.setForeground(new java.awt.Color(255, 255, 255));
        epaisseurDroiteCoucheLabel1.setText("in");

        javax.swing.GroupLayout murGauchePropLayout = new javax.swing.GroupLayout(murGaucheProp);
        murGaucheProp.setLayout(murGauchePropLayout);
        murGauchePropLayout.setHorizontalGroup(
            murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murGauchePropLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murGauchePropLayout.createSequentialGroup()
                        .addComponent(epaisseurDroiteLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(epaisseurInput, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(epaisseurNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantDivision5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(epaisseurDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(epaisseurDroiteCoucheLabel))
                    .addComponent(appliquerChangementEpaisseur)
                    .addGroup(murGauchePropLayout.createSequentialGroup()
                        .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(murGauchePropLayout.createSequentialGroup()
                                .addComponent(rainureGaucheLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(supplementaireIn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(appliquerChangementRainure))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supplementaireNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantDivision6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supplementaireDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(epaisseurDroiteCoucheLabel1)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        murGauchePropLayout.setVerticalGroup(
            murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(murGauchePropLayout.createSequentialGroup()
                .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murGauchePropLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(epaisseurDroiteLabel)
                            .addComponent(epaisseurInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, murGauchePropLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(murGauchePropLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(epaisseurNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(longueurAvantDivision5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(epaisseurDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(epaisseurDroiteCoucheLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(appliquerChangementEpaisseur)
                .addGap(1, 1, 1)
                .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(murGauchePropLayout.createSequentialGroup()
                        .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rainureGaucheLabel)
                            .addComponent(supplementaireIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appliquerChangementRainure))
                    .addGroup(murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(murGauchePropLayout.createSequentialGroup()
                            .addComponent(supplementaireNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(13, 13, 13))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, murGauchePropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplementaireDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(epaisseurDroiteCoucheLabel1)
                            .addComponent(longueurAvantDivision6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hauteurLabel.setForeground(new java.awt.Color(255, 255, 255));
        hauteurLabel.setText("Hauteur :");

        ftInputHauteur.setText("8");
        ftInputHauteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftInputHauteurActionPerformed(evt);
            }
        });

        ftHauteur.setForeground(new java.awt.Color(255, 255, 255));
        ftHauteur.setText("ft.");

        divisionInHauteur.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        divisionInHauteur.setForeground(new java.awt.Color(255, 255, 255));
        divisionInHauteur.setText("/");

        inNumInputHauteur.setText("0");

        inDenInputHauteur.setText("0");

        inHauteur.setForeground(new java.awt.Color(255, 255, 255));
        inHauteur.setText("in.");

        inInputHauteur.setText("0");

        facadeLabel.setForeground(new java.awt.Color(255, 255, 255));
        facadeLabel.setText("Longueur  :");

        droiteLabel.setForeground(new java.awt.Color(255, 255, 255));
        droiteLabel.setText("Couleur :");

        gaucheLabel.setForeground(new java.awt.Color(255, 255, 255));
        gaucheLabel.setText("Divers :");

        appliquerHauteur.setText("Appliquer");
        appliquerHauteur.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appliquerHauteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appliquerHauteurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabPropMursLayout = new javax.swing.GroupLayout(tabPropMurs);
        tabPropMurs.setLayout(tabPropMursLayout);
        tabPropMursLayout.setHorizontalGroup(
            tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropMursLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gaucheLabel)
                            .addComponent(droiteLabel)
                            .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(murGaucheProp, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                .addComponent(murDroiteProp, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                .addComponent(murAvantProp, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                            .addGroup(tabPropMursLayout.createSequentialGroup()
                                .addComponent(hauteurLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftHauteur)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inNumInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(divisionInHauteur)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inDenInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inHauteur)))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addComponent(facadeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(appliquerHauteur)
                        .addGap(34, 34, 34))))
        );
        tabPropMursLayout.setVerticalGroup(
            tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropMursLayout.createSequentialGroup()
                .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(divisionInHauteur)
                        .addComponent(inDenInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(inHauteur))
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hauteurLabel)
                                .addComponent(ftInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ftHauteur))
                            .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(inNumInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inInputHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(tabPropMursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(facadeLabel))
                    .addGroup(tabPropMursLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appliquerHauteur, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(murAvantProp, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(droiteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(murDroiteProp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gaucheLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(murGaucheProp, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(413, Short.MAX_VALUE))
        );

        selectPropTab.addTab("Murs", tabPropMurs);

        tabPropToit.setBackground(new java.awt.Color(51, 51, 51));

        panelToit.setBackground(new java.awt.Color(102, 102, 102));
        panelToit.setPreferredSize(new java.awt.Dimension(308, 180));

        angleToitLable.setForeground(new java.awt.Color(255, 255, 255));
        angleToitLable.setText("Angle :");

        angleToitInput.setText("15.0");
        angleToitInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angleToitInputActionPerformed(evt);
            }
        });

        couleurToitLabel.setForeground(new java.awt.Color(255, 255, 255));
        couleurToitLabel.setText("Couleur :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Façade", "Gauche", "Arrière", "Droite" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Orienté vers:");

        javax.swing.GroupLayout panelToitLayout = new javax.swing.GroupLayout(panelToit);
        panelToit.setLayout(panelToitLayout);
        panelToitLayout.setHorizontalGroup(
            panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToitLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelToitLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 148, Short.MAX_VALUE))
                    .addGroup(panelToitLayout.createSequentialGroup()
                        .addGroup(panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelToitLayout.createSequentialGroup()
                                .addComponent(couleurToitLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(couleurToitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelToitLayout.createSequentialGroup()
                                .addComponent(angleToitLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(angleToitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelToitLayout.setVerticalGroup(
            panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelToitLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(angleToitLable)
                    .addComponent(angleToitInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(couleurToitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(couleurToitLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        labelToit.setForeground(new java.awt.Color(255, 255, 255));
        labelToit.setText("Toit : ");

        javax.swing.GroupLayout tabPropToitLayout = new javax.swing.GroupLayout(tabPropToit);
        tabPropToit.setLayout(tabPropToitLayout);
        tabPropToitLayout.setHorizontalGroup(
            tabPropToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropToitLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(tabPropToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelToit)
                    .addComponent(panelToit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        tabPropToitLayout.setVerticalGroup(
            tabPropToitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropToitLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(labelToit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelToit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(679, Short.MAX_VALUE))
        );

        selectPropTab.addTab("Toit", tabPropToit);

        tabPropAutres.setBackground(new java.awt.Color(51, 51, 51));

        porteBouton.setBackground(new java.awt.Color(51, 51, 51));
        porteBouton.setForeground(new java.awt.Color(255, 255, 255));
        porteBouton.setText("Ajouter Porte");
        porteBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porteBoutonActionPerformed(evt);
            }
        });

        fenetreBouton.setBackground(new java.awt.Color(51, 51, 51));
        fenetreBouton.setForeground(new java.awt.Color(255, 255, 255));
        fenetreBouton.setText("Ajouter fenêtre");
        fenetreBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fenetreBoutonActionPerformed(evt);
            }
        });

        selectFacadeAutres.setBackground(new java.awt.Color(102, 102, 102));

        facadeConteneur.setLayout(new java.awt.GridLayout(90, 0));
        selectFacadeAutres.setViewportView(facadeConteneur);

        selecteurMurAutres.addTab("Facade", selectFacadeAutres);

        selectDroiteAutres.setBackground(new java.awt.Color(102, 102, 102));

        droiteConteneur.setLayout(new java.awt.GridLayout(90, 0));
        selectDroiteAutres.setViewportView(droiteConteneur);

        selecteurMurAutres.addTab("Droite", selectDroiteAutres);

        selectGaucheAutres.setBackground(new java.awt.Color(102, 102, 102));

        gaucheConteneur.setLayout(new java.awt.GridLayout(90, 0));
        selectGaucheAutres.setViewportView(gaucheConteneur);

        selecteurMurAutres.addTab("Gauche", selectGaucheAutres);

        selectArriereAutres.setBackground(new java.awt.Color(102, 102, 102));

        arriereConteneur.setLayout(new java.awt.GridLayout(90, 0));
        selectArriereAutres.setViewportView(arriereConteneur);

        selecteurMurAutres.addTab("Arrière", selectArriereAutres);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        PositionX.setForeground(new java.awt.Color(255, 255, 255));
        PositionX.setText("Position X :");

        positionXPiEntree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionXPiEntreeActionPerformed(evt);
            }
        });

        positionXFtLabel.setForeground(new java.awt.Color(255, 255, 255));
        positionXFtLabel.setText("ft");

        longueurAvantDivision1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision1.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision1.setText("/");

        longueurAvantInLabel1.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantInLabel1.setText("in");

        longueurAvantLabel1.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantLabel1.setText("Hauteur :");

        longueurAvantFtLabel1.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantFtLabel1.setText("ft");

        longueurAvantDivision2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision2.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision2.setText("/");

        longueurAvantInLabel2.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantInLabel2.setText("in");

        longueurAvantLabel2.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantLabel2.setText("Largeur :");

        longueurAvantFtLabel2.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantFtLabel2.setText("ft");

        longueurAvantDivision3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision3.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision3.setText("/");

        longueurAvantInLabel3.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantInLabel3.setText("in");

        PositionX2.setForeground(new java.awt.Color(255, 255, 255));
        PositionX2.setText("Position Y :");

        positionYPiEntree.setMaximumSize(new java.awt.Dimension(64, 22));

        positionXFtLabel2.setForeground(new java.awt.Color(255, 255, 255));
        positionXFtLabel2.setText("ft");

        longueurAvantDivision4.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        longueurAvantDivision4.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantDivision4.setText("/");

        longueurAvantInLabel4.setForeground(new java.awt.Color(255, 255, 255));
        longueurAvantInLabel4.setText("in");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(longueurAvantLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hauteurPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantFtLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hauteurPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hauteurPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantDivision2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hauteurPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantInLabel2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(PositionX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionXPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionXFtLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionXPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionXPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantDivision1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionXPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(longueurAvantInLabel1)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(longueurAvantLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largeurPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(longueurAvantFtLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largeurPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largeurPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantDivision3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(largeurPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantInLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PositionX2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(positionYPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(positionXFtLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(positionYPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(positionYPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantDivision4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(positionYPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurAvantInLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longueurAvantDivision1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PositionX)
                                .addComponent(positionXPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(positionXFtLabel)
                                .addComponent(positionXPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(positionXPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(positionXPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurAvantInLabel1)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longueurAvantDivision4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PositionX2)
                                .addComponent(positionYPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(positionXFtLabel2)
                                .addComponent(positionYPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(positionYPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(positionYPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurAvantInLabel4)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hauteurPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurAvantInLabel2))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(longueurAvantLabel1)
                            .addComponent(hauteurPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longueurAvantFtLabel1)
                            .addComponent(hauteurPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hauteurPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(longueurAvantDivision2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longueurAvantDivision3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(longueurAvantLabel2)
                                .addComponent(largeurPiEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurAvantFtLabel2)
                                .addComponent(largeurPoEntree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(largeurPoNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(largeurPoDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(longueurAvantInLabel3)))))
                .addGap(39, 39, 39))
        );

        indicateurReussiteCreation.setForeground(new java.awt.Color(60, 63, 65));
        indicateurReussiteCreation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout tabPropAutresLayout = new javax.swing.GroupLayout(tabPropAutres);
        tabPropAutres.setLayout(tabPropAutresLayout);
        tabPropAutresLayout.setHorizontalGroup(
            tabPropAutresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropAutresLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(tabPropAutresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(porteBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(indicateurReussiteCreation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fenetreBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(selecteurMurAutres)
        );
        tabPropAutresLayout.setVerticalGroup(
            tabPropAutresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPropAutresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabPropAutresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porteBouton)
                    .addComponent(fenetreBouton)
                    .addComponent(indicateurReussiteCreation))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selecteurMurAutres, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                .addContainerGap())
        );

        selectPropTab.addTab("Autres", tabPropAutres);

        javax.swing.GroupLayout panneauChaletProprietesLayout = new javax.swing.GroupLayout(panneauChaletProprietes);
        panneauChaletProprietes.setLayout(panneauChaletProprietesLayout);
        panneauChaletProprietesLayout.setHorizontalGroup(
            panneauChaletProprietesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauChaletProprietesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectPropTab)
                .addContainerGap())
        );
        panneauChaletProprietesLayout.setVerticalGroup(
            panneauChaletProprietesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauChaletProprietesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectPropTab)
                .addContainerGap())
        );

        panneauAfficheur.setBackground(new java.awt.Color(153, 153, 153));
        panneauAfficheur.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panneauAfficheurMouseDragged(evt);
            }
        });
        panneauAfficheur.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                panneauAfficheurMouseWheelMoved(evt);
            }
        });
        panneauAfficheur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panneauAfficheurMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panneauAfficheurMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panneauAfficheurLayout = new javax.swing.GroupLayout(panneauAfficheur);
        panneauAfficheur.setLayout(panneauAfficheurLayout);
        panneauAfficheurLayout.setHorizontalGroup(
            panneauAfficheurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1456, Short.MAX_VALUE)
        );
        panneauAfficheurLayout.setVerticalGroup(
            panneauAfficheurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 825, Short.MAX_VALUE)
        );

        checkbox1.setBackground(new java.awt.Color(204, 204, 204));
        checkbox1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkbox1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        checkbox1.setLabel("Grille");
        checkbox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkbox1ItemStateChanged(evt);
            }
        });

        epaisseurDroiteLabel1.setForeground(new java.awt.Color(255, 255, 255));
        epaisseurDroiteLabel1.setText("Largeur de 1 carré :");

        grille_input.setText("12");
        grille_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grille_inputActionPerformed(evt);
            }
        });

        epaisseurDroiteLabel2.setForeground(new java.awt.Color(255, 255, 255));
        epaisseurDroiteLabel2.setText("in");

        javax.swing.GroupLayout panneauPrincipalLayout = new javax.swing.GroupLayout(panneauPrincipal);
        panneauPrincipal.setLayout(panneauPrincipalLayout);
        panneauPrincipalLayout.setHorizontalGroup(
            panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barreChalCLT, javax.swing.GroupLayout.DEFAULT_SIZE, 1923, Short.MAX_VALUE)
            .addGroup(panneauPrincipalLayout.createSequentialGroup()
                .addGroup(panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panneauPrincipalLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panneauAfficheur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panneauPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panneauSelectionVue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkbox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauPrincipalLayout.createSequentialGroup()
                                .addComponent(epaisseurDroiteLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grille_input, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(epaisseurDroiteLabel2)))))
                .addGap(54, 54, 54)
                .addComponent(panneauChaletProprietes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panneauPrincipalLayout.setVerticalGroup(
            panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauPrincipalLayout.createSequentialGroup()
                .addComponent(barreChalCLT, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panneauPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panneauChaletProprietes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panneauPrincipalLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(panneauAfficheur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panneauSelectionVue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panneauPrincipalLayout.createSequentialGroup()
                                .addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panneauPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(epaisseurDroiteLabel1)
                                    .addComponent(grille_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(epaisseurDroiteLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        getContentPane().add(panneauPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int cleMurFacade = 0;
    private int cleMurDroite = 0;
    private int cleMurGauche = 0;
    private int cleMurDerriere = 0;

    public int getCleFacade() {
        return cleMurFacade;
    }

    

    private void sauvegarderFichierBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauvegarderFichierBoutonActionPerformed
       String fileName = null;
       
       JFileChooser j = new JFileChooser();
       j.setAcceptAllFileFilterUsed(false);
       j.setDialogTitle("Choisir un fichier .ser");
       FileNameExtensionFilter restriction = new FileNameExtensionFilter(".ser", "ser");
       j.addChoosableFileFilter(restriction);
      
       int response = j.showSaveDialog(null);
       
       if (response == JFileChooser.APPROVE_OPTION)
       {
           fileName = j.getSelectedFile().getAbsolutePath();
       }
       
       if (fileName != null)
       {
           this.Controleur.sauvegarderChalet(fileName);
       }
    }//GEN-LAST:event_sauvegarderFichierBoutonActionPerformed

    private void ouvrirFichierBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouvrirFichierBoutonActionPerformed
       String fileName = null;
       
       JFileChooser j = new JFileChooser();
       j.setAcceptAllFileFilterUsed(false);
       j.setDialogTitle("Choisir un fichier .ser");
       FileNameExtensionFilter restriction = new FileNameExtensionFilter(".ser", "ser");
       j.addChoosableFileFilter(restriction);
      
       int response = j.showSaveDialog(null);
       
       if (response == JFileChooser.APPROVE_OPTION)
       {
           fileName = j.getSelectedFile().getAbsolutePath();
       }
       
       if (fileName != null)
       {
           this.Controleur.chargerChalet(fileName);
       }
    }//GEN-LAST:event_ouvrirFichierBoutonActionPerformed

    private void annulerBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerBoutonActionPerformed
        this.Controleur.undo();
    }//GEN-LAST:event_annulerBoutonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void selecteurVueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecteurVueActionPerformed
        Controleur.changerMurActif(selecteurVue.getSelectedIndex());
        selecteurMurAutres.setSelectedIndex(selecteurVue.getSelectedIndex()-1);
    }//GEN-LAST:event_selecteurVueActionPerformed

    private void couleurAvantSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_couleurAvantSelectMouseClicked
        final JColorChooser choisisseurCouleur = new JColorChooser();
        class OKListener implements ActionListener {
            @Override
            public void actionPerformed(ActionEvent e) {
                Color couleur = choisisseurCouleur.getColor();
                //murFacade.setCouleur(couleur);?
                couleurAvantSelect.setBackground(couleur);
            }
        }
        JDialog couleurDialogue = JColorChooser.createDialog(null, "Choisissez une couleur", false, choisisseurCouleur, new OKListener(), null);
        choisisseurCouleur.setColor(new Color(0, 0, 0));
        couleurDialogue.setVisible(true);
    }//GEN-LAST:event_couleurAvantSelectMouseClicked

    private void couleurDroiteSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_couleurDroiteSelectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_couleurDroiteSelectMouseClicked

    private void couleurGaucheSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_couleurGaucheSelectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_couleurGaucheSelectMouseClicked

    private void couleurDerriereSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_couleurDerriereSelectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_couleurDerriereSelectMouseClicked

    private void fenetreBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fenetreBoutonActionPerformed
        fenetreProprietes fenetrePanel = new fenetreProprietes();
        //On doit avoir une clé par mur pour le fonctionnement du programme
        int cle = 0;
        int numMur = selecteurVue.getSelectedIndex();
        switch (numMur){
            case 0:
                break;
            case 1:
                cle = cleMurFacade;
                break;
            case 2:
                cle = cleMurDroite;
                break;
            case 3:
                cle = cleMurGauche;
                break;
            case 4:
                cle = cleMurDerriere;
        }
        
        //On collecte les données du panneau de création
        
        
        
        
        
       try{
       
        float[] posX = {Float.valueOf(positionXPiEntree.getText()),
        Float.valueOf(positionXPoEntree.getText()), Float.valueOf(positionXPoNum.getText()),
        Float.valueOf(positionXPoDen.getText())};
        
        float[] hauteur = {Float.valueOf(hauteurPiEntree.getText()),
        Float.valueOf(hauteurPoEntree.getText()), Float.valueOf(hauteurPoNum.getText()),
        Float.valueOf(hauteurPoDen.getText())};
        
        float[] largeur = {Float.valueOf(largeurPiEntree.getText()), Float.valueOf(largeurPoEntree.getText()),
        Float.valueOf(largeurPoNum.getText()), Float.valueOf(largeurPoDen.getText())};
        
        float[] posY = {Float.valueOf(positionYPiEntree.getText()),
        Float.valueOf(positionYPoEntree.getText()), Float.valueOf(positionYPoNum.getText()),
        Float.valueOf(positionYPoDen.getText())};
        
        if (posX[3]==0.0f)
        {
            positionXPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if (hauteur[3]==0.0f)
        {
            hauteurPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if (largeur[3]==0.0f)
        {
            largeurPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if (posY[3]==0.0f)
        {
            positionYPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if ((posX[0]<0.0f)||(posX[1]<0.0f)||(posX[2]<0.0f)||(posX[3]<0.0f)||
                (hauteur[0]<0.0f)||(hauteur[1]<0.0f)||(hauteur[2]<0.0f)||(hauteur[3]<0.0f)||
                (largeur[0]<0.0f)||(largeur[1]<0.0f)||(largeur[2]<0.0f)||(largeur[3]<0.0f)
                ||(posY[0]<0.0f)||(posY[1]<0.0f)||(posY[2]<0.0f)||(posY[3]<0.0f))
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Nombre négatif invalide");
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setVisible(true);
        }
        else{
        if (Controleur.ajouterFenetre(posX[0]*12 + posX[1] + posX[2]/Float.valueOf(positionXPoDen.getText()),
                posY[0]*12 + posY[1] + posY[2]/Float.valueOf(positionYPoDen.getText()),
                hauteur[0]*12 + hauteur[1] + hauteur[2]/Float.valueOf(hauteurPoDen.getText()),
                largeur[0]*12 + largeur[1] + largeur[2]/Float.valueOf(largeurPoDen.getText()), cle)){
        fenetrePanel.initialisation(posX, posY, hauteur, largeur, cle, Controleur);
        fenetrePanel.setAlignmentX(TOP_ALIGNMENT);
        fenetrePanel.setAlignmentY(TOP_ALIGNMENT);
        
        switch (numMur) {
            case 1:
                facadeConteneur.add(fenetrePanel);
                facadeConteneur.revalidate();
                facadeConteneur.repaint();
                cleMurFacade++;
                break;
            case 2:
                droiteConteneur.add(fenetrePanel);
                droiteConteneur.revalidate();
                droiteConteneur.repaint();
                cleMurDroite++;
                break;
            case 3:
                gaucheConteneur.add(fenetrePanel);
                gaucheConteneur.revalidate();
                gaucheConteneur.repaint();
                cleMurGauche++;
                break;
            case 4:
                arriereConteneur.add(fenetrePanel);
                arriereConteneur.revalidate();
                arriereConteneur.repaint();
                cleMurDerriere++;
                break;
            }
            indicateurReussiteCreation.setForeground(Color.GREEN);
            indicateurReussiteCreation.setText("Reussite");
        }
        else 
        {
            indicateurReussiteCreation.setForeground(Color.red);
            indicateurReussiteCreation.setText("Echec");
        }
       }
       }
       catch (NumberFormatException a)
       {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Caractère non numerique ou vide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
       }
       
        //Appel pour création d'un nouvel accessoire
        //scrolledPanel1.setLayout(col = 1, row = controlleur.reqnbaccessoiresmur());
    }//GEN-LAST:event_fenetreBoutonActionPerformed

    private void porteBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porteBoutonActionPerformed
        porteProprietes portePanel = new porteProprietes();
        //On doit avoir une clé par mur pour le fonctionnement du programme
        int cle = 0;
        int numMur = selecteurVue.getSelectedIndex();
        switch (numMur)
        {
            case 0:
                break;
            case 1:
                cle = cleMurFacade;
                break;
            case 2:
                cle = cleMurDroite;
                break;
            case 3:
                cle = cleMurGauche;
                break;
            case 4:
                cle = cleMurDerriere;
        }
        
        //On collecte les données du panneau de création
        
        
        try{
        float[] posX = {Float.valueOf(positionXPiEntree.getText()),
        Float.valueOf(positionXPoEntree.getText()), Float.valueOf(positionXPoNum.getText()),
        Float.valueOf(positionXPoDen.getText())};
        
        float[] hauteur = {Float.valueOf(hauteurPiEntree.getText()),
        Float.valueOf(hauteurPoEntree.getText()), Float.valueOf(hauteurPoNum.getText()),
        Float.valueOf(hauteurPoDen.getText())};
        
        float[] largeur = {Float.valueOf(largeurPiEntree.getText()), Float.valueOf(largeurPoEntree.getText()),
        Float.valueOf(largeurPoNum.getText()), Float.valueOf(largeurPoDen.getText())};
        if (posX[3]==0.0f)
        {
            positionXPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if (hauteur[3]==0.0f)
        {
            hauteurPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if (largeur[3]==0.0f)
        {
            largeurPoDen.setText("1");
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
        }
        if ((posX[0]<0.0f)||(posX[1]<0.0f)||(posX[2]<0.0f)||(posX[3]<0.0f)||
                (hauteur[0]<0.0f)||(hauteur[1]<0.0f)||(hauteur[2]<0.0f)||(hauteur[3]<0.0f)||
                (largeur[0]<0.0f)||(largeur[1]<0.0f)||(largeur[2]<0.0f)||(largeur[3]<0.0f))
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Nombre négatif invalide");
            erreur.setBounds(1500, 720, 300, 200);
            erreur.setVisible(true);
        }
        else{
        if (Controleur.ajouterPorte(posX[0]*12 + posX[1] + posX[2]/Float.valueOf(positionXPoDen.getText()),
                hauteur[0]*12 + hauteur[1] + hauteur[2]/Float.valueOf(hauteurPoDen.getText()), 
                largeur[0]*12 + largeur[1] + largeur[2]/Float.valueOf(largeurPoDen.getText()), cle)){
        portePanel.initialisation(posX, hauteur, largeur, cle, Controleur);
        portePanel.setAlignmentX(TOP_ALIGNMENT);
        portePanel.setAlignmentY(TOP_ALIGNMENT);
        
        switch (numMur) {
            case 1:
                facadeConteneur.add(portePanel);
                facadeConteneur.revalidate();
                facadeConteneur.repaint();
                cleMurFacade++;
                break;
            case 2:
                droiteConteneur.add(portePanel);
                droiteConteneur.revalidate();
                droiteConteneur.repaint();
                cleMurDroite++;
                break;
            case 3:
                gaucheConteneur.add(portePanel);
                gaucheConteneur.revalidate();
                gaucheConteneur.repaint();
                cleMurGauche++;
                break;
            case 4:
                arriereConteneur.add(portePanel);
                arriereConteneur.revalidate();
                arriereConteneur.repaint();
                cleMurDerriere++;
                break;
        }
        indicateurReussiteCreation.setForeground(Color.GREEN);
        indicateurReussiteCreation.setText("Reussite");
        
       }
        else 
        {
        indicateurReussiteCreation.setForeground(Color.red);
        indicateurReussiteCreation.setText("Echec");
        }
        }
        }

        catch (NumberFormatException a)
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Caractère non numerique ou vide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
        }
        
        //scrolledPanel1.setLayout(col = 1, row = controlleur.reqnbaccessoiresmur());
        
        
    }//GEN-LAST:event_porteBoutonActionPerformed

    private void boutonVueDessusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVueDessusActionPerformed
        selecteurVue.setSelectedIndex(0);
        Controleur.changerMurActif(0);
        Controleur.Zoom_reset();
    }//GEN-LAST:event_boutonVueDessusActionPerformed

    private void boutonVueDroiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVueDroiteActionPerformed
        selecteurVue.setSelectedIndex(2);
        Controleur.changerMurActif(2);
        Controleur.Zoom_reset();
    }//GEN-LAST:event_boutonVueDroiteActionPerformed

    private void boutonVueGaucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVueGaucheActionPerformed
        selecteurVue.setSelectedIndex(3);
        Controleur.changerMurActif(3);
        Controleur.Zoom_reset();
    }//GEN-LAST:event_boutonVueGaucheActionPerformed

    private void boutonVueAvantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVueAvantActionPerformed
        selecteurVue.setSelectedIndex(1);
        Controleur.changerMurActif(1);
        Controleur.Zoom_reset();
    }//GEN-LAST:event_boutonVueAvantActionPerformed

    private void boutonVueArriereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonVueArriereActionPerformed
        selecteurVue.setSelectedIndex(4);
        Controleur.changerMurActif(4);
        Controleur.Zoom_reset();
    }//GEN-LAST:event_boutonVueArriereActionPerformed

    private void NouveauChaletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NouveauChaletActionPerformed
        if (NouveauChalet.getText() != "Confirmer ?"){
            NouveauChalet.setText("Confirmer ?");
            NouveauChalet.setBackground(Color.red);
        }
        else
        {
            Controleur.nouveauChalet();
            facadeConteneur.removeAll();
            droiteConteneur.removeAll();
            gaucheConteneur.removeAll();
            facadeConteneur.removeAll();
            selecteurMurAutres.updateUI();
            panneauAfficheur.updateUI();
            NouveauChalet.setText("Nouveau chalet");
            NouveauChalet.setBackground(new Color(78, 80, 82));
            //On reset les clés
            cleMurDerriere = 0;
            cleMurDroite = 0;
            cleMurFacade = 0;
            cleMurGauche = 0;
        }
    }//GEN-LAST:event_NouveauChaletActionPerformed

    private void appliquerChangementLongueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appliquerChangementLongueurActionPerformed
        try{
            float Avantden = Float.valueOf(longueurAvantInInputDen.getText());
            float Avantnum = Float.valueOf(longueurAvantInNumInput.getText());
            float AvantFt = Float.valueOf(longueurAvantFtInput.getText());
            float AvantIn = Float.valueOf(longueurAvantInInput.getText());
            float Cden = Float.valueOf(longueurDroiteInInputDen.getText());
            float Cnum = Float.valueOf(longueurDroiteInNumInput.getText());
            float CFt = Float.valueOf(longueurDroiteFtInput.getText());
            float CIn = Float.valueOf(longueurDroiteInInput.getText());
            
            //if dénominateur 0 -> 1
            if (Cden == 0.0f)
            {
                longueurDroiteInInputDen.setText("1");
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setBounds(1500, 720, 300, 200);
                erreur.setMsg("Division par 0 remplacée");
                erreur.setVisible(true);
            }
            if (Avantden == 0.0f)
            {
                longueurAvantInInputDen.setText("1");
                ErreurFenetre erreurA = new ErreurFenetre();
                erreurA.setMsg("Division par 0 remplacée");
                erreurA.setBounds(1500, 720, 300, 200);
                erreurA.setVisible(true);
            }
            //if un des chiffres negatifs
            if ((Avantden < 0)||(AvantFt<0)||(Avantnum<0)||(Cden<0)||(Cnum<0)||(CFt<0)||(CIn<0))
            {
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Nombre négatif invalide");
                erreur.setBounds(1500, 720, 300, 200);
                erreur.setVisible(true);
                
            }
            else
            {
            float longueurAA = Float.parseFloat(longueurAvantFtInput.getText())*12 
                + Float.parseFloat(longueurAvantInInput.getText()) 
                + (Float.parseFloat(longueurAvantInNumInput.getText())/Float.parseFloat(longueurAvantInInputDen.getText()));
            Controleur.modifierDimensionMursAvantArriere(longueurAA);
            float longueurGD = Float.parseFloat(longueurDroiteFtInput.getText())*12 
                + Float.parseFloat(longueurDroiteInInput.getText())
                + (Float.parseFloat(longueurDroiteInNumInput.getText())/Float.parseFloat(longueurDroiteInInputDen.getText()));
            Controleur.modifierDimensionMursGaucheDroite(longueurGD);
            }
        }
        catch (NumberFormatException a) 
        {
            ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Caractère non numerique ou vide");
                erreur.setVisible(true);
                erreur.setBounds(1500, 720, 300, 200);
            /*JFrame frame = new JFrame("Erreur");
            JLabel erreur = new JLabel("Saisie Invalide");
            frame.getContentPane().add(erreur);
            frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            frame.setBounds(960, 540, 200, 200);
            frame.setSize(100, 50);
            frame.setVisible(true);*/
        };
        
        //try catch pour les fields vides?
        
    }//GEN-LAST:event_appliquerChangementLongueurActionPerformed

    private void longueurAvantFtInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longueurAvantFtInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_longueurAvantFtInputActionPerformed

    private void appliquerHauteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appliquerHauteurActionPerformed
        try
        {
            if(Float.valueOf(inDenInputHauteur.getText()) == 0.0f)
            {
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Division par 0 remplacée");
                erreur.setVisible(true);
                erreur.setBounds(1500, 720, 300, 200);
                inDenInputHauteur.setText("1");
            }
            if ((Float.parseFloat(inDenInputHauteur.getText())<0.0f)|| (Float.parseFloat(inInputHauteur.getText()) < 0.0f)
                    || (Float.parseFloat(inNumInputHauteur.getText()) < 0.0f)||(Float.parseFloat(ftInputHauteur.getText()))< 0.0f)
            {
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Nombre négatif Invalide");
                erreur.setVisible(true);
                erreur.setBounds(1500, 720, 300, 200);
            }
            else
            {
                float hauteur = Float.valueOf(ftInputHauteur.getText())*12 
                + Float.valueOf(inInputHauteur.getText()) 
                +(Float.valueOf(inNumInputHauteur.getText())/Float.valueOf(inDenInputHauteur.getText()));
                Controleur.modifierHauteur(hauteur);
            }
            
        }
        catch (NumberFormatException a)
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Caractère non numerique ou vide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
        }
    }//GEN-LAST:event_appliquerHauteurActionPerformed

    private void panneauAfficheurMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_panneauAfficheurMouseWheelMoved
        int notches = evt.getWheelRotation();
    double zoomFactor = 1 + (notches > 0 ? -1 : 1)*.1;
    int pos_x = evt.getX();
    int pos_y = evt.getY();
    Controleur.Zoom(zoomFactor,pos_x,pos_y);
    
    }//GEN-LAST:event_panneauAfficheurMouseWheelMoved

    private void ftInputHauteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftInputHauteurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftInputHauteurActionPerformed

    private void appliquerChangementEpaisseurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appliquerChangementEpaisseurActionPerformed
        try{
        float pouce = Float.valueOf(epaisseurInput.getText());
        float num = Float.valueOf(epaisseurNum.getText());
        float den = Float.valueOf(epaisseurDen.getText());
        if (den == 0.0f)
        {
            ErreurFenetre erreur = new ErreurFenetre();
            den = 1.0f;
            erreur.setMsg("Division par 0 remplacée");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
            inDenInputHauteur.setText("1");
        }
        if ((pouce < 0.0f) || (num < 0.0f) || (num < 0.0f))
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Nombre négatif Invalide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
        }
        else
        {
        Controleur.modifierEpaisseur(Float.parseFloat(epaisseurInput.getText()) + num/den);
        }
        }
        catch (NumberFormatException a)
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Caractère non numerique ou vide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
        }
    }//GEN-LAST:event_appliquerChangementEpaisseurActionPerformed

    private void appliquerChangementRainureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appliquerChangementRainureActionPerformed
        try 
        {
            float pouce = Float.valueOf(supplementaireIn.getText());
            float num = Float.valueOf(supplementaireNum.getText());
            float denum = Float.valueOf(supplementaireDen.getText());
            if ((denum == 0.0f))
            {
                denum = 1.0f;
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Division par 0 remplacée");
                erreur.setVisible(true);
                erreur.setBounds(1500, 720, 300, 200);
                supplementaireDen.setText("1");
                
            }
            if((pouce < 0.0f)||(num < 0.0f)||(denum < 0.0f))
            {
                ErreurFenetre erreur = new ErreurFenetre();
                erreur.setMsg("Nombre négatif Invalide");
                erreur.setVisible(true);
                erreur.setBounds(1500, 720, 300, 200);
            }
            else
            {
            Controleur.modifierRainureSupp(Float.parseFloat(supplementaireIn.getText()) + num/denum);
            }
        }
        catch (NumberFormatException a)
        {
            ErreurFenetre erreur = new ErreurFenetre();
            erreur.setMsg("Caractère non numerique ou vide");
            erreur.setVisible(true);
            erreur.setBounds(1500, 720, 300, 200);
        }
    }//GEN-LAST:event_appliquerChangementRainureActionPerformed

    private void positionXPiEntreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionXPiEntreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionXPiEntreeActionPerformed

    private void longueurAvantInInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longueurAvantInInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_longueurAvantInInputActionPerformed

    private void supplementaireInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplementaireInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplementaireInActionPerformed

    private void panneauAfficheurMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panneauAfficheurMousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_panneauAfficheurMousePressed

    private void panneauAfficheurMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panneauAfficheurMouseReleased
        float posX = evt.getPoint().x;
        float posY = evt.getPoint().y;
        
    }//GEN-LAST:event_panneauAfficheurMouseReleased

    private void panneauAfficheurMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panneauAfficheurMouseDragged

            float posX = evt.getPoint().x;
            float posY = evt.getPoint().y;
            
            if (this.Controleur.isCursorOnAcc(posX, posY))
            {
                
                this.Controleur.modifierDimensionAcc(-1, -1, posX/6, posY/6, this.Controleur.AccIdfromXY(posX, posY),false, true);
            }  
    }//GEN-LAST:event_panneauAfficheurMouseDragged

    private void exporterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exporterComboBoxActionPerformed
       int index = exporterComboBox.getSelectedIndex();
       String path = null;
       
       JFileChooser j = new JFileChooser();
       j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       int response = j.showSaveDialog(null);
       
       if (response == JFileChooser.APPROVE_OPTION)
       {
           path = j.getSelectedFile().getAbsolutePath() + "\\";
       }
       
       if (path != null)
       {
           switch(index)
           {
               // Export all
               case 0:
               {
                   this.Controleur.exporterStlBrut(path);
                   this.Controleur.exporterStlFini(path);
                   this.Controleur.exporterStlRetraits(path);
               }break;
               
               // Export Brut
               case 1:
               {
                   this.Controleur.exporterStlBrut(path);
               }break;

               // Export Fini
               case 2:
               {
                   this.Controleur.exporterStlFini(path);
               }break;

               // Export Retraits
               case 3:
               {
                   this.Controleur.exporterStlRetraits(path);
               }break;
               
               default:{}break;
           }
       }  
    }//GEN-LAST:event_exporterComboBoxActionPerformed

    private void retablirBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retablirBoutonActionPerformed
        this.Controleur.redo();
    }//GEN-LAST:event_retablirBoutonActionPerformed

    private void checkbox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkbox1ItemStateChanged
        this.Controleur.grille_toggle();
    }//GEN-LAST:event_checkbox1ItemStateChanged

    private void grille_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grille_inputActionPerformed
        if (!grille_input.getText().isBlank())
        {
        this.Controleur.grille_setLength(Integer.valueOf(grille_input.getText()));
        }
    }//GEN-LAST:event_grille_inputActionPerformed

    private void angleToitInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angleToitInputActionPerformed
        if (!angleToitInput.getText().isBlank())
        {
        this.Controleur.toit_asgangle(Float.valueOf(angleToitInput.getText())*(float)Math.PI/180.0f);
        }
    }//GEN-LAST:event_angleToitInputActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    Controleur.changerOrientationToit(jComboBox1.getSelectedIndex());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetrePrincipale().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChalCLTNom;
    private javax.swing.JLabel Nom;
    private javax.swing.JButton NouveauChalet;
    private javax.swing.JLabel PositionX;
    private javax.swing.JLabel PositionX2;
    private javax.swing.JLabel activeFileName;
    private javax.swing.JTextField angleToitInput;
    private javax.swing.JLabel angleToitLable;
    private javax.swing.JButton annulerBouton;
    private javax.swing.JButton appliquerChangementEpaisseur;
    private javax.swing.JButton appliquerChangementLongueur;
    private javax.swing.JButton appliquerChangementRainure;
    private javax.swing.JButton appliquerHauteur;
    private javax.swing.JPanel arriereConteneur;
    private javax.swing.JPanel barreChalCLT;
    private javax.swing.JButton boutonVueArriere;
    private javax.swing.JButton boutonVueAvant;
    private javax.swing.JButton boutonVueDessus;
    private javax.swing.JButton boutonVueDroite;
    private javax.swing.JButton boutonVueGauche;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JButton couleurAvantSelect;
    private javax.swing.JLabel couleurDerriereLabel;
    private javax.swing.JButton couleurDerriereSelect;
    private javax.swing.JLabel couleurDroiteLabel;
    private javax.swing.JLabel couleurDroiteLabel1;
    private javax.swing.JButton couleurDroiteSelect;
    private javax.swing.JLabel couleurGaucheLabel;
    private javax.swing.JButton couleurGaucheSelect;
    private javax.swing.JButton couleurToitInput;
    private javax.swing.JLabel couleurToitLabel;
    private javax.swing.JLabel divisionInHauteur;
    private javax.swing.JPanel droiteConteneur;
    private javax.swing.JLabel droiteLabel;
    private javax.swing.JTextField epaisseurDen;
    private javax.swing.JLabel epaisseurDroiteCoucheLabel;
    private javax.swing.JLabel epaisseurDroiteCoucheLabel1;
    private javax.swing.JLabel epaisseurDroiteLabel;
    private javax.swing.JLabel epaisseurDroiteLabel1;
    private javax.swing.JLabel epaisseurDroiteLabel2;
    private javax.swing.JTextField epaisseurInput;
    private javax.swing.JTextField epaisseurNum;
    private javax.swing.JComboBox<String> exporterComboBox;
    private javax.swing.JPanel facadeConteneur;
    private javax.swing.JLabel facadeLabel;
    private javax.swing.JButton fenetreBouton;
    private javax.swing.JToolBar fichierOptions;
    private javax.swing.JLabel ftHauteur;
    private javax.swing.JTextField ftInputHauteur;
    private javax.swing.JPanel gaucheConteneur;
    private javax.swing.JLabel gaucheLabel;
    private javax.swing.JTextField grille_input;
    private javax.swing.JLabel hauteurLabel;
    private javax.swing.JTextField hauteurPiEntree;
    private javax.swing.JTextField hauteurPoDen;
    private javax.swing.JTextField hauteurPoEntree;
    private javax.swing.JTextField hauteurPoNum;
    private javax.swing.JTextField inDenInputHauteur;
    private javax.swing.JLabel inHauteur;
    private javax.swing.JTextField inInputHauteur;
    private javax.swing.JTextField inNumInputHauteur;
    private javax.swing.JLabel indicateurReussiteCreation;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelToit;
    private javax.swing.JTextField largeurPiEntree;
    private javax.swing.JTextField largeurPoDen;
    private javax.swing.JTextField largeurPoEntree;
    private javax.swing.JTextField largeurPoNum;
    private javax.swing.JLabel longueurAvantDivision;
    private javax.swing.JLabel longueurAvantDivision1;
    private javax.swing.JLabel longueurAvantDivision2;
    private javax.swing.JLabel longueurAvantDivision3;
    private javax.swing.JLabel longueurAvantDivision4;
    private javax.swing.JLabel longueurAvantDivision5;
    private javax.swing.JLabel longueurAvantDivision6;
    private javax.swing.JTextField longueurAvantFtInput;
    private javax.swing.JLabel longueurAvantFtLabel;
    private javax.swing.JLabel longueurAvantFtLabel1;
    private javax.swing.JLabel longueurAvantFtLabel2;
    private javax.swing.JTextField longueurAvantInInput;
    private javax.swing.JTextField longueurAvantInInputDen;
    private javax.swing.JLabel longueurAvantInLabel;
    private javax.swing.JLabel longueurAvantInLabel1;
    private javax.swing.JLabel longueurAvantInLabel2;
    private javax.swing.JLabel longueurAvantInLabel3;
    private javax.swing.JLabel longueurAvantInLabel4;
    private javax.swing.JTextField longueurAvantInNumInput;
    private javax.swing.JLabel longueurAvantLabel;
    private javax.swing.JLabel longueurAvantLabel1;
    private javax.swing.JLabel longueurAvantLabel2;
    private javax.swing.JLabel longueurDroiteDivision;
    private javax.swing.JTextField longueurDroiteFtInput;
    private javax.swing.JLabel longueurDroiteFtLabel;
    private javax.swing.JTextField longueurDroiteInInput;
    private javax.swing.JTextField longueurDroiteInInputDen;
    private javax.swing.JLabel longueurDroiteInLabel;
    private javax.swing.JTextField longueurDroiteInNumInput;
    private javax.swing.JLabel longueurDroiteLabel;
    private javax.swing.JPanel murAvantProp;
    private javax.swing.JPanel murDroiteProp;
    private javax.swing.JPanel murGaucheProp;
    private javax.swing.JButton ouvrirFichierBouton;
    private javax.swing.JPanel panelToit;
    private javax.swing.JPanel panneauAfficheur;
    private javax.swing.JPanel panneauChaletProprietes;
    private javax.swing.JPanel panneauPrincipal;
    private javax.swing.JPanel panneauSelectionVue;
    private javax.swing.JButton porteBouton;
    private javax.swing.JLabel positionXFtLabel;
    private javax.swing.JLabel positionXFtLabel2;
    private javax.swing.JTextField positionXPiEntree;
    private javax.swing.JTextField positionXPoDen;
    private javax.swing.JTextField positionXPoEntree;
    private javax.swing.JTextField positionXPoNum;
    private javax.swing.JTextField positionYPiEntree;
    private javax.swing.JTextField positionYPoDen;
    private javax.swing.JTextField positionYPoEntree;
    private javax.swing.JTextField positionYPoNum;
    private javax.swing.JLabel rainureGaucheLabel;
    private javax.swing.JButton retablirBouton;
    private javax.swing.JButton sauvegarderFichierBouton;
    private javax.swing.JScrollPane selectArriereAutres;
    private javax.swing.JScrollPane selectDroiteAutres;
    private javax.swing.JScrollPane selectFacadeAutres;
    private javax.swing.JScrollPane selectGaucheAutres;
    private javax.swing.JTabbedPane selectPropTab;
    private javax.swing.JTabbedPane selecteurMurAutres;
    private javax.swing.JComboBox<String> selecteurVue;
    private javax.swing.JTextField supplementaireDen;
    private javax.swing.JTextField supplementaireIn;
    private javax.swing.JTextField supplementaireNum;
    private javax.swing.JPanel tabPropAutres;
    private javax.swing.JPanel tabPropMurs;
    private javax.swing.JPanel tabPropToit;
    // End of variables declaration//GEN-END:variables
private Controleur Controleur;
}
